name: ci/cd to dev(sail)
on:
  push:
    branches: [ "dev" ]

jobs:
  ci:
    environment: dev
    outputs:
      docker-tag: ${{ steps.prepare.outputs.docker-tag }}
      target-cluster: ${{ steps.prepare.outputs.target-cluster }}

    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Prepare
        id: prepare
        run: |
          echo "docker-tag=dev-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish Kroma Prover Proxy
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: 814420593069.dkr.ecr.ap-northeast-2.amazonaws.com/prover-proxy:${{ steps.prepare.outputs.docker-tag }},814420593069.dkr.ecr.ap-northeast-2.amazonaws.com/prover-proxy:latest
          platforms: linux/amd64,linux/arm64

  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: kroma-network/devops-helm
          ref: main
          token: ${{ secrets.KROMA_GIT_TOKEN }}

      - name: Update Image Tag
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '.image.tag = "${{ needs.ci.outputs.docker-tag }}"' 'kroma-chain/prover-proxy/dev-kroma-sail-apne2.yaml'

      - name: Push Changed Image Tag
        run: |
          git config --global user.email lightscale@lightscale.io
          git config --global user.name lightscale
          git config --global push.default matching
          git fetch && git checkout main

          if [ -z "$(git status --porcelain)" ]
          then
            echo "Nothing to commit, working directory clean"
          else
            git commit -am "https://github.com/${{ github.repository }}/commit/${GITHUB_SHA}" && git push
          fi
        shell: bash
